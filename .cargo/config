[target.thumbv7m-none-eabi]
runner = 'arm-none-eabi-gdb'
# runner = 'gdbgui -g /usr/bin/arm-none-eabi-gdb'
rustflags = [
  # LLD (shipped with the Rust toolchain) is used as the default linker
  "-C", "link-arg=-Tlink.x",
  # "-C", "link-arg=-L/work/stm32f103xx-hal/bin",
  # "-C", "link-arg=hal",
  # "-C", "link-arg=/work/stm32f103xx-hal/bin/hal.a",
  # "-C", "link-arg=/work/stm32f103xx-hal/bin/libc.a",
  # "-C", "link-arg=/work/stm32f103xx-hal/bin/libnosys.a",
  # "-C", "link-arg=/work/stm32f103xx-hal/bin/libc_nano.a",

  "-C", "link-arg=-lasb4_hal",
  "-C", "link-arg=-lhal",
  "-C", "link-arg=/usr/lib/arm-none-eabi/newlib/thumb/libc_nano.a",

  # if you run into problems with LLD switch to the GNU linker by commenting out
  # this line
  # "-C", "linker=arm-none-eabi-ld",
  # "-C", "link-arg=-L/work/stm32f103xx-hal/bin,-lhal",

  # if you need to link to pre-compiled C libraries provided by a C toolchain
  # use GCC as the linker by commenting out both lines above and then
  # uncommenting the three lines below
  # "-C", "linker=arm-none-eabi-gcc",
  # "-C", "link-arg=-Wl,-Tlink.x",
  # "-C", "link-arg=-nostartfiles",
]

[build]
target = "thumbv7m-none-eabi"
